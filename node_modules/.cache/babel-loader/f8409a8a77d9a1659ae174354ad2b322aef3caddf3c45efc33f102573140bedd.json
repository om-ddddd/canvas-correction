{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ausu vivobook\\\\AstroNova\\\\src\\\\StarFieldCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarWarp = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    var _window$visualViewpor;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    let w = canvas.width = dimensions.width;\n    let h = canvas.height = dimensions.height;\n    const numStars = 400;\n    const speed = 1.5;\n    let stars = Array.from({\n      length: numStars\n    }, () => createStar());\n    let animationId;\n    function createStar() {\n      return {\n        x: Math.random() * w - w / 2,\n        y: Math.random() * h - h / 2,\n        z: Math.random() * w\n      };\n    }\n    function updateStar(star) {\n      star.z -= speed;\n      if (star.z <= 0) {\n        Object.assign(star, createStar());\n        star.z = w;\n      }\n    }\n    function drawStar(star) {\n      const sx = star.x / star.z * w + w / 2;\n      const sy = star.y / star.z * h + h / 2;\n      const r = (1 - star.z / w) * 1.2;\n      if (sx < 0 || sx > w || sy < 0 || sy > h) {\n        Object.assign(star, createStar());\n        star.z = w;\n        return;\n      }\n      ctx.beginPath();\n      ctx.arc(sx, sy, r, 0, Math.PI * 2);\n      ctx.fillStyle = \"#fff\";\n      ctx.fill();\n    }\n    function animate() {\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n      ctx.fillRect(0, 0, w, h);\n      stars.forEach(star => {\n        updateStar(star);\n        drawStar(star);\n      });\n      animationId = requestAnimationFrame(animate);\n    }\n\n    // Start the animation\n    animate();\n\n    // Handle resize and scroll events\n    const handleResize = () => {\n      const newWidth = window.innerWidth;\n      const newHeight = window.innerHeight;\n      setDimensions({\n        width: newWidth,\n        height: newHeight\n      });\n      w = canvas.width = newWidth;\n      h = canvas.height = newHeight;\n\n      // Regenerate stars when resizing\n      stars = Array.from({\n        length: numStars\n      }, () => createStar());\n    };\n\n    // Handle scroll events to ensure canvas covers entire viewport\n    const handleScroll = () => {\n      // Force a repaint of the canvas\n      canvas.style.transform = 'translateZ(0)';\n    };\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"scroll\", handleScroll, {\n      passive: true\n    });\n\n    // For mobile browsers that change height on scroll (when address bar shows/hides)\n    window.addEventListener(\"orientationchange\", handleResize);\n    (_window$visualViewpor = window.visualViewport) === null || _window$visualViewpor === void 0 ? void 0 : _window$visualViewpor.addEventListener('resize', handleResize);\n    return () => {\n      var _window$visualViewpor2;\n      cancelAnimationFrame(animationId);\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"scroll\", handleScroll);\n      window.removeEventListener(\"orientationchange\", handleResize);\n      (_window$visualViewpor2 = window.visualViewport) === null || _window$visualViewpor2 === void 0 ? void 0 : _window$visualViewpor2.removeEventListener('resize', handleResize);\n    };\n  }, [dimensions.width, dimensions.height]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block',\n      position: 'fixed',\n      width: '100%',\n      height: '100%',\n      left: '0',\n      top: '0',\n      right: '0',\n      bottom: '0',\n      overflow: 'hidden',\n      backgroundColor: '#000',\n      zIndex: '-1',\n      willChange: 'transform',\n      // Hardware acceleration hint\n      transform: 'translateZ(0)' // Force GPU acceleration\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(StarWarp, \"ymSRQva0MuLKstO4+zch/doUW/8=\");\n_c = StarWarp;\nexport default StarWarp;\nvar _c;\n$RefreshReg$(_c, \"StarWarp\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","StarWarp","_s","canvasRef","dimensions","setDimensions","width","window","innerWidth","height","innerHeight","_window$visualViewpor","canvas","current","ctx","getContext","w","h","numStars","speed","stars","Array","from","length","createStar","animationId","x","Math","random","y","z","updateStar","star","Object","assign","drawStar","sx","sy","r","beginPath","arc","PI","fillStyle","fill","animate","fillRect","forEach","requestAnimationFrame","handleResize","newWidth","newHeight","handleScroll","style","transform","addEventListener","passive","visualViewport","_window$visualViewpor2","cancelAnimationFrame","removeEventListener","ref","display","position","left","top","right","bottom","overflow","backgroundColor","zIndex","willChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ausu vivobook/AstroNova/src/StarFieldCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst StarWarp = () => {\r\n    const canvasRef = useRef(null);\r\n    const [dimensions, setDimensions] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    });\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n        \r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        let w = (canvas.width = dimensions.width);\r\n        let h = (canvas.height = dimensions.height);\r\n\r\n        const numStars = 400;\r\n        const speed = 1.5;\r\n\r\n        let stars = Array.from({ length: numStars }, () => createStar());\r\n        let animationId;\r\n\r\n        function createStar() {\r\n            return {\r\n                x: Math.random() * w - w / 2,\r\n                y: Math.random() * h - h / 2,\r\n                z: Math.random() * w,\r\n            };\r\n        }\r\n\r\n        function updateStar(star) {\r\n            star.z -= speed;\r\n            if (star.z <= 0) {\r\n                Object.assign(star, createStar());\r\n                star.z = w;\r\n            }\r\n        }\r\n\r\n        function drawStar(star) {\r\n            const sx = (star.x / star.z) * w + w / 2;\r\n            const sy = (star.y / star.z) * h + h / 2;\r\n            const r = (1 - star.z / w) * 1.2;\r\n\r\n            if (sx < 0 || sx > w || sy < 0 || sy > h) {\r\n                Object.assign(star, createStar());\r\n                star.z = w;\r\n                return;\r\n            }\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(sx, sy, r, 0, Math.PI * 2);\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fill();\r\n        }\r\n\r\n        function animate() {\r\n            ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\r\n            ctx.fillRect(0, 0, w, h);\r\n\r\n            stars.forEach((star) => {\r\n                updateStar(star);\r\n                drawStar(star);\r\n            });\r\n\r\n            animationId = requestAnimationFrame(animate);\r\n        }\r\n\r\n        // Start the animation\r\n        animate();\r\n\r\n        // Handle resize and scroll events\r\n        const handleResize = () => {\r\n            const newWidth = window.innerWidth;\r\n            const newHeight = window.innerHeight;\r\n            \r\n            setDimensions({\r\n                width: newWidth,\r\n                height: newHeight\r\n            });\r\n            \r\n            w = canvas.width = newWidth;\r\n            h = canvas.height = newHeight;\r\n            \r\n            // Regenerate stars when resizing\r\n            stars = Array.from({ length: numStars }, () => createStar());\r\n        };\r\n\r\n        // Handle scroll events to ensure canvas covers entire viewport\r\n        const handleScroll = () => {\r\n            // Force a repaint of the canvas\r\n            canvas.style.transform = 'translateZ(0)';\r\n        };\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\r\n        \r\n        // For mobile browsers that change height on scroll (when address bar shows/hides)\r\n        window.addEventListener(\"orientationchange\", handleResize);\r\n        window.visualViewport?.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            cancelAnimationFrame(animationId);\r\n            window.removeEventListener(\"resize\", handleResize);\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n            window.removeEventListener(\"orientationchange\", handleResize);\r\n            window.visualViewport?.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [dimensions.width, dimensions.height]);\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n                display: 'block',\r\n                position: 'fixed',\r\n                width: '100%',\r\n                height: '100%',\r\n                left: '0',\r\n                top: '0',\r\n                right: '0', \r\n                bottom: '0',\r\n                overflow: 'hidden',\r\n                backgroundColor: '#000',\r\n                zIndex: '-1',\r\n                willChange: 'transform', // Hardware acceleration hint\r\n                transform: 'translateZ(0)', // Force GPU acceleration\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StarWarp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}